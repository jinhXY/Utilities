{
	// Use IntelliSense to learn about possible attributes.
	// Hover to view descriptions of existing attributes.
	// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
	"version": "0.2.0",
	"configurations": [
		{
			"name": "(gdb) Launch",
			"type": "cppdbg",
			"request": "launch",
			// Resolved by CMake Tools:
			"program": "${command:cmake.launchTargetPath}",
			"args": [],
			"stopAtEntry": true,
			"cwd": "${workspaceFolder}",
			"environment": [
				{
					// add the directory where our target was built to the PATHs
					// it gets resolved by CMake Tools:
					"name": "PATH",
					"value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}"
				},
				{
					/* Can't figure out a way of using leak detection with gdb */
					"name": "ASAN_OPTIONS",
					"value": "detect_leaks=0"
				}
			],
			"externalConsole": false,
			"MIMode": "gdb",
			"setupCommands": [
				{
					"description": "Enable pretty-printing for gdb",
					"text": "-enable-pretty-printing",
					"ignoreFailures": true
				}
			]
		},
		{
			"name": "(ctest) Launch",
			"type": "cppdbg",
			"request": "launch",
			// Resolved by CMake Tools:
			"cwd": "${cmake.testWorkingDirectory}",
			"program": "${cmake.testProgram}",
			"environment": [
				{
					/* Can't figure out a way of using leak detection with gdb */
					"name": "ASAN_OPTIONS",
					"value": "detect_leaks=0"
				},
				{
					/* Makes finding segfaults easier */
					"name": "CK_FORK",
					"value": "no"
				}
			],
			"args": [
				"${cmake.testArgs}"
			],
			"stopAtEntry": true
		}
	]
}